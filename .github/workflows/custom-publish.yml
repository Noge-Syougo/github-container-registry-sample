name: Docker Custom Image Build & Publish

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

    paths:
      - 'docker/custom/**'
      - '.github/workflows/custom-publish.yml'

  # Run tests for any PRs.
  pull_request:
    paths:
      - 'docker/custom/**'
      - '.github/workflows/custom-publish.yml'


env:
  DOCKER_BUILDKIT: 1
  CUSTOM_IMAGE_NAME: gpack-custom
  CUSTOM_DOCKER_FILE: docker/custom/Dockerfile

jobs:

  # Run tests.
  # custom-build-test:
  #   #needs: base-push
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Log into registry
  #       run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

  #     - name: Custom Image Build and Tests
  #       run: |
  #           # build base image
  #           docker build . --file $CUSTOM_DOCKER_FILE --tag $CUSTOM_IMAGE_NAME

  #           # test base image
  #           docker run $CUSTOM_IMAGE_NAME echo "TEST ECHO: test custom docker image"

  # Push custom image to GitHub Packages.
  custom-push:
    # Ensure test job passes before pushing image.
    # needs: custom-build-test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/base/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.CUSTOM_IMAGE_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.CUSTOM_IMAGE_NAME }}:0.0.1
